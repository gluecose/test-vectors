start = TestCaseInput / TestCaseOutput

TestCaseInput = {
  uuid: text ; unique identifier for the test case
  title: text
  description: text

  key: JWK
  alg: COSEAlgo

  operation
}

operation //= ( "sign1::sign" => Sign1_sign )
operation //= ( "sign1::verify" => Sign1_verify )
; operation //= ( "sign::sign" => TODO )
; operation //= ( "sign::verify" => TODO )
; operation //= ( "encrypt::encrypt" => TODO )
; operation //= ( "encrypt::decrypt" => TODO )
; operation //= ( "encrypt0::encrypt" => TODO )
; operation //= ( "encrypt0::decrypt" => TODO )
; operation //= ( "mac::mac" => TODO )
; operation //= ( "mac::verify" => TODO )
; operation //= ( "mac0::mac" => TODO )
; operation //= ( "mac0::verify" => TODO )

TODO = "todo"

Sign1_sign = {
  payload: HexString
  ? protectedHeaders: CBORBlob
  ? unprotectedHeaders: CBORBlob
  ? external: HexString ; externally supplied data
  ? detached: bool .default false
  tbsHex: CBORBlob ; CBOR encoded Sig_structure
  expectedOutput: CBORBlob
  fixedOutputLength: uint ; used only for non-deterministic testers
}

Sign1_verify = {
  taggedCOSESign1: CBORBlob ; tagged COSE Sign1
  ? external: HexString     ; optional external data
  ; optional detached payload (only present if payload==nil in taggedCOSESign1)
  ? detachedPayload: HexString
  shouldVerify: bool        ; whether a successful validation is expected
}

CBORBlob = {
  cborHex: HexString  ; base16 encoded byte buffer
  ? cborDiag: text    ; optional string containing the CBOR diagnostic
                      ; representation of cborHex
}

HexString = text .regexp "([a-f0-9]{2})+"

; See https://www.iana.org/assignments/cose/cose.xhtml#algorithms
COSEAlgo /= "ES256"
COSEAlgo /= "ES384"
; COSEAlgo /= TODO

JWK = {
  + text => text
}

TestCaseOutput = {
  uuid: text ; unique identifier for the test case
  implementation: Implementation
  executionTs: text ; RFC3339 date-time
  result: Result
}

Result /= "pass"
Result /= "skip"
Result /= "fail"

Implementation = {
  name: text
  version: text
  author: [ + text ]
  homepage: text
  license: text
  sourceLang: [ + text ]
  ? targetLang: [ + text ]
  deterministic: bool
}